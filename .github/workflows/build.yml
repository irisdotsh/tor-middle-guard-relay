name: build


on:
  release:
    types:
      - published
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/build.yml'
      - '.github/workflows/nightly.yml'
      - 'Dockerfile'
      - 'start-tor.sh'
  pull_request:
    branches:
      - 'main'
    paths:
        - '.github/workflows/build.yml'
        - '.github/workflows/nightly.yml'
        - 'Dockerfile'
        - 'start-tor.sh'
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
        contents: read
        packages: write
        id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install go
        if: ${{ github.event_name == 'release' }}
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          check-latest: true

      - name: Install cosign
        if: ${{ github.event_name == 'release' }}
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Github Container Registry
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}"
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/i386
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the image with our private key
        if: ${{ github.event_name == 'release' }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes --key env://COSIGN_PRIVATE_KEY {}@${DIGEST}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}